<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDAntdBadge {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$ClassName,
        [Parameter()]
        [ValidateSet('success', 'processing', 'default ', 'error', 'warning')]
        [string]$Status,
        [Parameter()]
        [string]$Title,
        [Parameter()]
        [string]$Text,
        [Parameter()]
        [int]$OverflowCount,
        [Parameter()]
        [int[]]$OffSet,
        [Parameter()]
        [scriptblock]$Count,
        [Parameter()]
        [object]$Content,
        [Parameter()]
        [switch]$ShowZero,
        [Parameter()]
        [switch]$Dot,
        [Parameter(ParameterSetName = 'Color')]
        [string]$Color,
        [Parameter(ParameterSetName = 'PresetColors')]
        [ValidateSet('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime')]
        [string]$PresetColor,
        [Parameter()]
        [hashtable]$Style,
        [Parameter()]
        [int]$RefreshInterval = 5000,
        [Parameter()]
        [switch]$AutoRefresh,
        [Parameter()]
        [switch]$IsEndpoint

    )

    End {

            if ($null -ne $Count -and $IsEndpoint) {
                if ($Count -is [scriptblock]) {
                    $Endpoint = New-UDEndpoint -Endpoint $Count -Id $Id 
                }
                elseif ($Count -isnot [UniversalDashboard.Models.Endpoint]) {
                    throw "Count must be a script block or UDEndpoint"
                }
            }
            
        @{
            assetId       = $AssetId 
            isPlugin      = $true 
            type          = "ud-antd-badge"
            id            = $Id
            className     = $ClassName
            offset        = $OffSet
            showZero      = $ShowZero.IsPresent
            dot           = $Dot.IsPresent
            overflowCount = $OverflowCount
            count         = $Count.Invoke()
            status        = $Status
            color         = $PresetColor
            style         = $Style
            title         = $Title
            text          = $Text
            autoRefresh = $AutoRefresh.IsPresent
            isEndpoint = $IsEndpoint.IsPresent
            refreshInterval = $RefreshInterval
            content = $Content
        }

    }
}
