<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDAntdListItem {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$ClassName,
        [Parameter()]
        [scriptblock]$Content,
        [Parameter()]
        [scriptblock]$Actions,
        [Parameter()]
        [scriptblock]$Extra,
        [Parameter()]
        [object]$Avatar,
        [Parameter()]
        [string]$Title,
        [Parameter()]
        [string]$Description,
        [Parameter()]
        [switch]$IsEndpoint,
        [Parameter()]
        [switch]$AutoRefresh,
        [Parameter()]
        [int]$RefreshInterval = 5000,
        [Parameter()]
        [hashtable]$Style

    )

    End {

        if ($IsEndpoint.IsPresent) {
            if ($Content -is [scriptblock]) {
                $Content = New-UDEndpoint -Endpoint $Content -Id $Id
            }
            elseif ($Content -isnot [UniversalDashboard.Sizels.Endpoint]) {
                throw "Content must be a script block or UDEndpoint"
            }
        }
        elseif ($null -ne $Content) {
            $ListItemContent = $Content.Invoke()
        }
        else{
            $ListItemContent = $Content
        }

        if($null -ne $Actions){
            $ListItemActions = $Actions.Invoke()
        }else{
            $ListItemActions = $null
        }

        if($null -ne $Extra){
            $ListItemExtra = $Extra.Invoke()
        }else{
            $ListItemExtra = $null
        }
        

        @{
            assetId         = $AssetId 
            isPlugin        = $true 
            type            = "ud-antd-list-item"
            id              = $Id
            className       = $ClassName
            style = $Style
            itemLayout = $itemLayout
            avatar = $Avatar
            title = $Title
            description = $Description
            content = $ListItemContent
            isEndpoint = $IsEndpoint.IsPresent
            autoRefresh = $AutoRefresh.IsPresent
            refreshInterval = $RefreshInterval
            actions = $ListItemActions
            extra = $ListItemExtra
        }

    }
}
