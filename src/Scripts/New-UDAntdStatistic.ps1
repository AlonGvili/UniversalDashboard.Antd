<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDAntdStatistic {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$ClassName,
        [Parameter()]
        [object]$Value,
        [Parameter()]
        [object]$Suffix,
        [Parameter()]
        [object]$Title,
        [Parameter()]
        [object]$Prefix,
        [Parameter()]
        [switch]$IsEndpoint,
        [Parameter()]
        [switch]$AutoRefresh,
        [Parameter()]
        [int]$RefreshInterval = 5000,
        [Parameter()]
        [int]$Precision,
        [Parameter()]
        [string]$GroupSeparator,
        [Parameter()]
        [string]$DecimalSeparator,
        [Parameter()]
        [hashtable]$Style,
        [Parameter()]
        [hashtable]$ValueStyle

    )

    End {

        if($null -ne $Prefix){
            if($Prefix -is [scriptblock]){
                $StatisticPrefix = $Prefix.Invoke()
            }
            elseif ($Prefix -is [string]) {
                $StatisticPrefix = @($Prefix)
            }
            else{
                throw "Prefix must be a script block or String"
            }
        }
        else{
            $StatisticPrefix = @()
        }

        if($null -ne $Suffix){
            if($Suffix -is [scriptblock]){
                $StatisticSuffix = $Suffix.Invoke()
            }
            elseif ($Suffix -is [string]) {
                $StatisticSuffix = @($Suffix)
            }
            else{
                throw "Suffix must be a script block or String"
            }
        }else{
            $StatisticSuffix = @()
        }

        if($null -ne $Title){
            if($Title -is [scriptblock]){
                    $StatisticTitle = $Title.Invoke()
            }
            elseif ($Title -is [String]) {
                $StatisticTitle = @($Title)
            }
            else{
                throw "Title must be a script block or String"
            }
        }
        else{
            $StatisticTitle = @()
        }

        if($null -ne $Value){
            if($Value -is [scriptblock]){
                if($IsEndpoint.IsPresent){
                    $Endpoint = New-UDEndpoint -Endpoint $Value -Id $Id
                    $StatisticValue = $Value.Invoke()
                }
                else{
                    $StatisticValue = $Value.Invoke()
                }
            }
            elseif ($Value -is [String]) {
                $StatisticValue = $Value
            }
            else{
                throw "Value must be a script block or String"
            }
        }
        else{
            $StatisticValue = @()
        }

        @{
            assetId         = $AssetId 
            isPlugin        = $true 
            type            = "ud-antd-statistic"
            id              = $Id
            className       = $ClassName
            style = $Style
            isEndpoint = $IsEndpoint
            autoRefresh = $AutoRefresh.IsPresent
            refreshInterval = $RefreshInterval
            decimalSeparator = $DecimalSeparator
            groupSeparator = $GroupSeparator
            precision = $Precision
            prefix = $StatisticPrefix
            suffix = $StatisticSuffix
            title = $StatisticTitle
            value = $StatisticValue
            valueStyle = $ValueStyle
        }

    }
}
