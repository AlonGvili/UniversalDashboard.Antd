<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDAntdList {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$ClassName,
        [Parameter()]
        [switch]$bordered,
        [Parameter()]
        $footer,
        [Parameter()]
        $grid,
        [Parameter()]
        [object]$header,
        [Parameter()]
        [ValidateSet('horizontal', 'vertical')]
        [string]$itemLayout,
        [Parameter()]
        [string]$rowKey,
        [Parameter()]
        [switch]$loading,
        [Parameter()]
        [switch]$loadMore,
        [Parameter()]
        [string]$locale,
        [Parameter()]
        [switch]$pagination,
        [Parameter()]
        [switch]$split,
        [Parameter()]
        [scriptblock]$Content,
        [Parameter()]
        [switch]$IsEndpoint,
        [Parameter()]
        [switch]$AutoRefresh,
        [Parameter()]
        [int]$RefreshInterval = 5000,
        [Parameter()]
        [scriptblock]$renderItem,
        [Parameter()]
        [hashtable]$Style

    )

    End {

        if ($null -ne $Content) {
            if ($Content -is [scriptblock]) {
                $dataSourceEndpoint = New-UDEndpoint -Endpoint $Content -Id $Id
            }
            elseif ($Content -isnot [UniversalDashboard.Sizels.Endpoint]) {
                throw "Content must be a script block or UDEndpoint"
            }
        }
        

        @{
            assetId         = $AssetId 
            isPlugin        = $true 
            type            = "ud-antd-list"
            id              = $Id
            className       = $ClassName
            style           = $Style
            bordered        = $bordered.IsPresent
            footer          = $footer
            grid            = $grid
            header          = $header
            itemLayout      = $itemLayout
            rowKey          = $rowKey
            loading         = $loading.IsPresent
            loadMore        = $loadMore.IsPresent
            pagination      = $pagination.IsPresent
            split           = $split.IsPresent
            content         = $Content.Invoke()
            renderItem      = $renderItem
            isEndpoint      = $IsEndpoint.IsPresent
            autoRefresh     = $AutoRefresh.IsPresent
            refreshInterval = $RefreshInterval
        }

    }
}
