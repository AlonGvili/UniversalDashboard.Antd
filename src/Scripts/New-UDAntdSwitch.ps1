<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDAntdSwitch {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$ClassName,
        [Parameter()]
        [switch]$autoFocus,
        [Parameter()]
        [switch]$checked,
        [Parameter()]
        [object]$checkedChildren,
        [Parameter()]
        [switch]$defaultChecked,
        [Parameter()]
        [switch]$disabled,
        [Parameter()]
        [switch]$loading,
        [Parameter()]
        [ValidateSet("default","small","large")]
        [string]$size,
        [Parameter()]
        [object]$unCheckedChildren,
        [Parameter()]
        [object]$onChange,
        [Parameter()]
        [hashtable]$Style

    )

    End {

        if ($null -ne $OnClick) {
            if ($OnClick -is [scriptblock]) {
                $OnClick = New-UDEndpoint -Endpoint $OnClick -Id ($Id + "onClick")
            }
            elseif ($OnClick -isnot [UniversalDashboard.Models.Endpoint]) {
                throw "OnClick must be a script block or UDEndpoint"
            }
        }

        if ($null -ne $onChange) {
            if ($onChange -is [scriptblock]) {
                $onChange = New-UDEndpoint -Endpoint $onChange -Id ($Id + "onChange")
            }
            elseif ($onChange -isnot [UniversalDashboard.Models.Endpoint]) {
                throw "OnClick must be a script block or UDEndpoint"
            }
        }

        @{
            assetId = $AssetId 
            isPlugin = $true 
            type = "ud-antd-switch"
            id = $Id
            className = $ClassName
            autoFocus = $AutoFocus.IsPresent
            checked = $Checked.IsPresent
            checkedChildren = $CheckedChildren
            defaultChecked = $DefaultChecked.IsPresent
            disabled = $Disabled.IsPresent
            loading = $Loading.IsPresent
            size = $Size
            unCheckedChildren = $UnCheckedChildren
            # onChange = $OnChange
            # onClick = $OnClick
            style = $Style
        }

    }
}
